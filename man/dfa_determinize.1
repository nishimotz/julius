.\"     Title: 
    dfa_determinize
  
.\"    Author: 
.\" Generator: DocBook XSL Stylesheets v1.71.0 <http://docbook.sf.net/>
.\"      Date: 10/02/2008
.\"    Manual: 
.\"    Source: 
.\"
.TH "DFA_DETERMINIZE" "1" "10/02/2008" "" ""
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.SH "NAME"

    dfa_determinize
   \- Determinize NFA grammar network.
.SH "SYNOPSIS"
.HP 16
\fBdfa_determinize\fR [\-o\ \fIoutfile\fR] {dfafile}
.SH "DESCRIPTION"
.PP

\fBdfa_determinize\fR
converts a non\-deterministic .dfa file into deterministic DFA. Output to standard output, or file specified by "\fB\-o\fR" option.
.PP
This additional tool is not necessary on a grammar building procedure in Julius, since the grammar network generated by
\fBmkdfa.pl\fR
is always determinized.
.SH "OPTIONS"
.PP
\fB \-o \fR \fIoutfile\fR
.RS 3n
Outout file. If not specified, output to stdout.
.RE
.SH "EXAMPLES"
.PP
Determinize
\fIfoo.dfa\fR
to
\fIbar.dfa\fR:
.sp .RS 3n .nf % \fBdfa_determinize\fR \-o bar.dfa foo.dfa .fi .RE
Another way:
.sp .RS 3n .nf % \fBdfa_determinize\fR < foo.dfa > bar.dfa .fi .RE
.SH "SEE ALSO"
.PP

\fB mkdfa.pl \fR( 1 )
,
\fB dfa_minimize \fR( 1 )
.SH "COPYRIGHT"
.PP
Copyright (c) 1997\-2000 Information\-technology Promotion Agency, Japan
.PP
Copyright (c) 1991\-2008 Kawahara Lab., Kyoto University
.PP
Copyright (c) 2000\-2005 Shikano Lab., Nara Institute of Science and Technology
.PP
Copyright (c) 2005\-2008 Julius project team, Nagoya Institute of Technology
.SH "LICENSE"
.PP
The same as Julius.
