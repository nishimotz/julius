.\"     Title: 
    jcontrol
  
.\"    Author: 
.\" Generator: DocBook XSL Stylesheets v1.71.0 <http://docbook.sf.net/>
.\"      Date: 10/02/2008
.\"    Manual: 
.\"    Source: 
.\"
.TH "JCONTROL" "1" "10/02/2008" "" ""
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.SH "名前"

    jcontrol
   \- Juliusモジュールモード用のサンプルクライアント
.SH "概要"
.HP 9
\fBjcontrol\fR {\fIhostname\fR} [\fIportnum\fR]
.SH "DESCRIPTION"
.PP
jcontrol は，モジュールモードで動作している julius に接続し，APIを介し てコントロールする簡単なコンソールプログラムです．Julius への一時停止 や再開などのコマンドの送信，および Julius からの認識結果や音声イベントの メッセージ受信を行うことができます．
.PP
起動後，jcontrol は，指定ホスト上において「モジュールモード」で動作中 のJulius に対し，接続を試みます．接続確立後，jcontrol はユーザーからの コマンド入力およびメッセージ受信待ち状態となります．
.PP
jcontrol は ユーザーが入力したコマンドを解釈し，対応するAPIコマンドを Julius へ送信します．また，Julius から認識結果や入力トリガ情報 など のメッセージが送信されてきたときは，その内容を標準出力へ書き出します．
.PP
モジュールモードの仕様については，関連文書をご覧下さい．
.SH "OPTIONS"
.PP
\fB hostname \fR
.RS 3n
接続先のホスト名
.RE
.PP
\fB portnum \fR
.RS 3n
ポート番号（デフォルト：10500）
.RE
.SH "COMMANDS"
.PP
jcontrol は標準入力から1行ずつコマンド文字列を受け取る． コマンドの一覧は以下の通り．
.SS "動作制御"
.PP
pause
.RS 3n
Juliusの認識動作を中断させ，一時停止状態に移行させる．一時停止状 態にあるJuliusは，たとえ音声入力があっても認識処理を行わない． ある区間の音声認識処理の途中でこのコマンドを受け取った場合， Julius はその認識処理が終了した後，一時停止状態に移行する．
.RE
.PP
terminate
.RS 3n

pauseと同じく，Juliusの認識動作を中断させ， 一時停止状態に移行させる．ある区間の音声認識処理の途中でこのコ マンドを受け取った場合，その入力を破棄して即座に一時停止状態に 移行する．
.RE
.PP
resume
.RS 3n
Julius を一時停止状態から通常状態へ移行させ，認識を再開させる．
.RE
.PP
inputparam \fIarg\fR
.RS 3n
文法切り替え時に音声入力であった場合の入力中音声の扱いを指定． "TERMINATE", "PAUSE", "WAIT"のうちいずれかを指定．
.RE
.PP
version
.RS 3n
Julius にバージョン文字列を返させる．
.RE
.PP
status
.RS 3n
Julius からシステムの状態 (active / sleep) を報告させる．
.RE
.SS "文法・単語認識関連"
.PP
changegram \fIprefix\fR
.RS 3n
認識文法を "\fIprefix.dfa\fR" と "\fIprefix.dict\fR" に切り替える．カレントプロ セス内の文法は全て消去され，指定された文法に置き換わる．
.RE
.PP
addgram \fIprefix\fR
.RS 3n
認識文法として "\fIprefix.dfa\fR" と "\fIprefix.dict\fR" をカレントプロセスに追加する．
.RE
.PP
deletegram \fIgramlist\fR
.RS 3n
カレントプロセスから指定された文法を削除する．文法の指定は，文 法名（追加時の
\fIprefix\fR）か，あるいは Julius から送られる
GRAMINFO内にある文法 ID で指定する．複数の文法を削除したい場合は，文法名もしくはIDをカ ンマで区切って複数指定する（IDと文法名が混在してもよい）．
.RE
.PP
deactivategram \fIgramlist\fR
.RS 3n
カレントプロセスの指定された文法を一時的に無効にする．無効にされた 文法は，エンジン内に保持されたまま，認識処理からは一時的に除外される． 無効化された文法は
activategram
で再び有効化できる．
.sp
文法の指定は，文法名（追加時の
\fIprefix\fR）か，あるいはJulius から送ら れる
GRAMINFO内にある文法 ID で指定する．複 数の文法を指定したい場合は，文法名もしくはIDをカンマで区切って 複数指定する（IDと文法名が混在してもよい）．
.RE
.PP
activategram \fIgramlist\fR
.RS 3n
カレントプロセスで無効化されている文法を有効化する． 文法の指定は，文法名（追加時の
\fIprefix\fR）か，あるいはJulius から送ら れる
GRAMINFO内にある文法 ID で指定する．複 数の文法を指定したい場合は，文法名もしくはIDをカンマで区切って 複数指定する（IDと文法名が混在してもよい）．
.RE
.PP
addword \fIgrammar_name_or_id\fR \fIdictfile\fR
.RS 3n
dictfile の中身を，カレントプロセスの指定された文法に追加する．
.RE
.PP
syncgram
.RS 3n
addgram や deletegram などによる文法の更新を即時に行う． 同期確認用である．
.RE
.SS "プロセス関連のコマンド"
.PP
Julius\-4 では複数モデルの同時認識が行える．この場合， 認識プロセス ("\fB\-SR\fR" で指定された認識処理インスタンス) ごとにモジュールクライアントから操作を行うことができる．
.PP
クライアントからはどれか一つのプロセスが「カレントプロセス」として 割り当てられる．文法関連の命令はカレントプロセスに対して行われる．
.PP
listprocess
.RS 3n
Julius に現在エンジンにある認識プロセスの一覧を送信させる．
.RE
.PP
currentprocess \fIprocname\fR
.RS 3n
カレントプロセスを指定された名前のプロセスに切り替える．
.RE
.PP
shiftprocess
.RS 3n
カレントプロセスを循環切り替えする．呼ばれるたびにその次のプロセスに カレントプロセスが切り替わる．
.RE
.PP
addprocess \fIjconffile\fR
.RS 3n
エンジンに認識プロセスを新たに追加する．与える
\fIjconffile\fR
は，通常のものと違い， ただ一種類の LM 設定を含むものである必要がある．また，実際に送られる のはパス名のみであり，ファイル読み込みはJulius側で行われるため， ファイルパスは Julius から見える場所を指定する必要が有る．
.sp
追加された LM および認識プロセスは，jconffile の名前が プロセス名となる．
.RE
.PP
delprocess \fIprocname\fR
.RS 3n
指定された名前の認識プロセスをエンジンから削除する．
.RE
.PP
deactivateprocess \fIprocname\fR
.RS 3n
指定された名前の認識プロセスを，一時的に無効化する．無効化され たプロセスは次回以降の入力に対して認識処理からスキップされる． 無効化されたプロセスは
activateprocess
で 再び有効化できる．
.RE
.PP
activateprocess \fIprocname\fR
.RS 3n
指定された名前の認識プロセスを有効化する．
.RE
.SH "EXAMPLES"
.PP
Julius からのメッセージは "> " を行の先頭につけてそのまま標準出力に出力 されます．以下は実行例です．
.sp .RS 3n .nf % \fBjulius\fR \-C ... \-module .fi .RE
上記のようにして Julius をモジュールモードで起動した後， jcontrol をそのホスト名を指定して起動します．
.sp .RS 3n .nf % \fBjcontrol\fR hostname .fi .RE
音声入力を行えば，イベント内容や結果が jcontrol 側に送信されます． jcontrol に対してコマンドを入力する（最後に Enter を押す）と， Julius にコマンドが送信され，Julius が制御されます．
.PP
詳しいプロトコルについては，関連文書を参照してください．
.SH "SEE ALSO"
.PP

\fB julius \fR( 1 )
.SH "COPYRIGHT"
.PP
Copyright (c) 1991\-2008 京都大学 河原研究室
.PP
Copyright (c) 1997\-2000 情報処理振興事業協会(IPA)
.PP
Copyright (c) 2000\-2008 奈良先端科学技術大学院大学 鹿野研究室
.PP
Copyright (c) 2005\-2008 名古屋工業大学 Julius開発チーム
.SH "LICENSE"
.PP
Julius の使用許諾に準じます．
